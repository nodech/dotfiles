# Git move in the history tree.
gfwd() {
  git checkout $(git rev-list --topo-order HEAD.."$*" | tail -1)
}
alias gback="git checkout HEAD~"

# Copy with progress
function cpv() {
  rsync -a --no-i-r --info=progress2 $@
}

# Show processes with memory.
alias psm="ps -eo rss,pid,user,command | awk '{ hr=\$1/1024 ; printf(\"%13.6f Mb \",hr) } { for ( x=4 ; x<=NF ; x++ ) { printf(\"%s \",\$x) } print "" }' | sort"

# Sort processes by memory usage
psa() {
  ps -eo rss,pid,user,command | sort -n | awk '{ \
    hr[1024**2]="GB"; hr[1024]="MB"; \
    for (x=1024**3; x>=1024; x/=1024) { \
    if ($1>=x) { printf ("%-6.2f %s ", $1/x, hr[x]); break } \
    } } { printf ("%-6s %-10s ", $2, $3) } \
    { for ( x=4 ; x<=NF ; x++ ) { printf ("%s ",$x) } print ("") }'
}

# multiconfig NVIM
if [ "${NVIMBIN}" = "" ]
then
  NVIMBIN=$(which nvim)
fi

nvim () {
  VIMRC="$HOME/.config/nvim/configs/${1}.vimrc"
  if [ $# -gt 0 ]
  then
    if [[ -a $1 ]]
    then
      $NVIMBIN $@
    elif [[ -a "$VIMRC" ]]
    then
      $NVIMBIN -u "$VIMRC" ${@:2}
    else
      $NVIMBIN $@
    fi
  else
    $NVIMBIN
  fi
}

alias vim='nvim'


# Download torrents and links using aria and progress..
download() {
  local dir=$HOME/.ariaDn

  if [[ ! -d "$dir" ]]; then
    echo "No folder $dir, creating.."
    mkdir $dir

    [ $? ] && echo "Could not create folder $dir" || exit 1
  fi

  aria2c \
    --summary-interval=5 \
    --download-result=full \
    --on-bt-download-complete="$HOME/.ariaFinished" \
    --on-download-complete="$HOME/.ariaFinished" $@ | tee "$dir/$(uuidgen)"
}

alias ta='tmux attach -t'
alias tad='tmux attach -d -t'
alias ts='tmux new-session -s'
alias tl='tmux list-sessions'
alias tksv='tmux kill-server'
alias tkss='tmux kill-session -t'

# TODO: undotrash
function rmtrash() {
  local name=$(date +%Y-%m-%d/%H:%M:%S)
  MOUNT_DIR=`findmnt -T . -J | jq -r '.filesystems[0].target'`
  TRASH="$MOUNT_DIR/.TRASH"
  TRASH_DIR="$TRASH/$name"

  mkdir -p $TRASH_DIR
  mv $@ $TRASH_DIR
}

function cltrash() {
  mainDir=`findmnt -T . -J | jq -r '.filesystems[0].target'`
  $rm -rIv $mainDir/.TRASH/*
  $rm -rIv $mainDir/.TRASH/.*
}

function cltrashf() {
  mainDir=`findmnt -T . -J | jq -r '.filesystems[0].target'`
  $rm -rvf $mainDir/.TRASH/*
  $rm -rvf $mainDir/.TRASH/.*
}

alias rrm=$(which rm)
alias rm='echo use rmtrash'

# alacrity changes
alias coldark='chcolor.sh ayu-dark'
alias collight='chcolor.sh gruvbox-light'

# Cross platform open
which open 2 > /dev/null || alias open=xdg-open;

# Linux notification sound
function notif_sound() {
  notif="$HOME/.ui/notification.mp3"

  if [[ -f "$notif" ]]; then
    mpv --no-video $notif 1> /dev/null 2> /dev/null
  fi
}

# LSD Wrappers for ls if they are available.
if [[ -x `which lsd` ]]; then
  alias l="lsd -l"
  alias la="lsd -la"
  alias ll="lsd -lah"
  alias lt="lsd --tree"
  alias ls="lsd"
else
  echo "no lsd.."
  alias ll="ls -lsah"
fi

dates() {
  echo "US/NY:\t`TZ=America/New_York date`"
  # echo "US/SF:\t`TZ=America/Los_Angeles date`"
  # echo "EU/LD:\t`TZ=Europe/London date`"
  echo "GE/TB:\t`TZ=Asia/Tbilisi date`"
}

# Alias for difftastic git diff
alias tgd="GIT_EXTERNAL_DIFF='difft --display=inline' git diff"

watchex() {
  watchexec -e $1 --clear --restart --stdin-quit ${@:2}
}

watchjs() {
  watchex js,jsx,ts,tsx,mjs $@
}

watchgo() {
  watchex go $@
}

watchrust() {
  watchex rs $@
}

watchc() {
  watchex c,h,cc,hh $@
}
